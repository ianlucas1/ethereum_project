name: Python CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.12"] # Standardized on Python 3.12

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: requirements-lock.txt

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-lock.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # ---------- dependency install ---------------------------------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-lock.txt
          pip install pytest-cov

      # ---------- lint -----------------------------------------------------------------------
      - name: Lint with Ruff (optional, good practice)
        run: |
          pip install ruff==0.0.241      # same version used in local dev hooks
          ruff .                         # no --check flag in this version

      # ---------- tests ----------------------------------------------------------------------
      - name: Test with pytest and generate coverage report
        if: matrix.os != 'macos-latest' # Simplified condition
        env:
          RAPIDAPI_KEY: dummy_key_for_ci
          CM_API_KEY: ""
          ETHERSCAN_API_KEY: ""
        run: pytest --cov=src --cov-report=xml

      - name: Test with pytest (no coverage)
        if: matrix.os == 'macos-latest' # Simplified condition
        env:
          RAPIDAPI_KEY: dummy_key_for_ci
          CM_API_KEY: ""
          ETHERSCAN_API_KEY: ""
        run: pytest -q

      # ---------- coverage upload ------------------------------------------------------------
      - name: Upload coverage reports to Codecov
        if: matrix.os != 'macos-latest' # Simplified condition
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          fail_ci_if_error: true