name: Python CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"] # Test across supported versions

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: requirements-lock.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-lock.txt
        pip install pytest-cov

    - name: Lint with Ruff (optional, good practice)
      run: |
        pip install ruff
        ruff check .
        ruff format --check .

    - name: Test with pytest and generate coverage report
      env:
        RAPIDAPI_KEY: "dummy_key_for_ci"
        CM_API_KEY: ""
        ETHERSCAN_API_KEY: ""
      if: matrix.os != 'macos-latest' || matrix.python-version == '3.10'
      run: |
        pytest --cov=src --cov-report=xml

    - name: Test with pytest (no coverage)
      env:
        RAPIDAPI_KEY: "dummy_key_for_ci"
        CM_API_KEY: ""
        ETHERSCAN_API_KEY: ""
      if: matrix.os == 'macos-latest' && matrix.python-version != '3.10'
      run: |
        pytest -q

    - name: Upload coverage reports to Codecov
      if: matrix.os != 'macos-latest' || matrix.python-version == '3.10'
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: ${{ github.repository }}
        fail_ci_if_error: true

  # ── new mypy strict type-check job ───────────────────────────────────
  mypy:
    name: Mypy strict (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: test          # don't waste cycles if tests already failed
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: requirements-dev.txt

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install "mypy==1.15.0" "pydantic>=1.10,<2" types-requests
      - name: Run mypy strict
        run: |
          mypy --config-file mypy.ini src/